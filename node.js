var fs = require('fs');
var path = require('path');

// 解析需要遍历的文件夹，我这以E盘根目录为例
var filePath = path.resolve('./challenges');
var dict = {"Responsive Web Design":"响应式 Web 设计","Javascript Algorithms And Data Structures":"算法和数据结构","Front End Libraries":"前端库和框架","Data Visualization":"数据可视化","Apis And Microservices":"API 和微服务","Information Security And Quality Assurance":"信息安全和质量保证","Coding Interview Prep":"面试攻略","Basic HTML and HTML5":"HTML 基础","Basic CSS":"CSS 基础","Applied Visual Design":"应用视觉设计","Applied Accessibility":"应用无障碍","Responsive Web Design Principles":"响应式 Web 设计原则","CSS Flexbox":"CSS 弹性盒子","CSS Grid":"CSS 网格","Responsive Web Design Projects":"项目实战","Basic JavaScript":"JavaScript 基础","ES6":"ES6","Regular Expressions":"正则表达式","Debugging":"调试","Basic Data Structures":"数据结构基础","Basic Algorithm Scripting":"算法基础","Object Oriented Programming":"面向对象编程","Functional Programming":"函数式编程","Intermediate Algorithm Scripting":"算法中级","JavaScript Algorithms and Data Structures Projects":"项目实战","Bootstrap":"Bootstrap","jQuery":"jQuery","Sass":"Sass","React":"React","Redux":"Redux","React and Redux":"React 和 Redux","Front End Libraries Projects":"项目实战","Data Visualization with D3":"用 D3 实现数据可视化","JSON APIs and Ajax":"JSON 和 Ajax","Data Visualization Projects":"项目实战","Managing Packages with Npm":"用 Npm 来管理模块","Basic Node and Express":"Node 和 Express 基础","MongoDB and Mongoose":"MongoDB 和 Mongoose","Apis and Microservices Projects":"项目实战","Information Security with HelmetJS":"信息安全——Helmet.js","Quality Assurance and Testing with Chai":"质量保证和测试——Chai.js","Advanced Node and Express":"Node 和 Express 高级","Information Security and Quality Assurance Projects":"项目实战","Algorithms":"算法","Data Structures":"数据结构","Take Home Projects":"私人项目","Rosetta Code":"罗塞塔代码","Project Euler":"欧拉计划","Introduction to Basic HTML and HTML5":"HTML 基础介绍","Say Hello to HTML Elements":"向 HTML 元素问好","Headline with the h2 Element":"用 h2 元素代表副标题","Inform with the Paragraph Element":"用 p 元素代表段落","Fill in the Blank with Placeholder Text":"用占位符文本填充空白","Uncomment HTML":"去除 HTML 的注释","Comment out HTML":"给 HTML 添加注释","Delete HTML Elements":"删除 HTML 元素","Introduction to HTML5 Elements":"HTML5 元素介绍","Add Images to Your Website":"给网站添加图片","Link to External Pages with Anchor Elements":"用锚点实现网页间的跳转","Link to Internal Sections of a Page with Anchor Elements":"用锚点实现网页内部跳转","Nest an Anchor Element within a Paragraph":"将锚点嵌套在段落中","Make Dead Links Using the Hash Symbol":"用 # 号来创建固定链接","Turn an Image into a Link":"给图片添加链接","Create a Bulleted Unordered List":"创建一个无序列表","Create an Ordered List":"创建一个有序列表","Create a Text Field":"创建一个输入框","Add Placeholder Text to a Text Field":"给输入框添加占位符文本","Create a Form Element":"创建一个表单","Add a Submit Button to a Form":"给表单添加提交按钮","Use HTML5 to Require a Field":"给表单添加一个必填字段","Create a Set of Radio Buttons":"创建一组单选按钮","Create a Set of Checkboxes":"创建一组复选框","Check Radio Buttons and Checkboxes by Default":"给单选按钮和复选框添加默认选中项","Nest Many Elements within a Single div Element":"元素嵌套","Declare the Doctype of an HTML Document":"声明 HTML 文档的文档类型","Define the Head and Body of an HTML Document":"定义 HTML 文档的标题和正文","Introduction to Basic CSS":"CSS 基础介绍","Change the Color of Text":"更改文本的颜色","Use CSS Selectors to Style Elements":"使用元素选择器来设置元素的样式","Use a CSS Class to Style an Element":"使用 class 选择器设置单个元素的样式","Style Multiple Elements with a CSS Class":"使用 class 选择器设置多个元素的样式","Change the Font Size of an Element":"更改元素的字体大小","Set the Font Family of an Element":"设置元素的字体家族","Import a Google Font":"引入谷歌字体","Specify How Fonts Should Degrade":"字体如何优雅降级","Size Your Images":"调整图片的大小","Add Borders Around Your Elements":"在元素周围添加边框","Add Rounded Corners with border-radius":"用 border-radius 添加圆角边框","Make Circular Images with a border-radius":"用 border-radius 制作圆形图片","Give a Background Color to a div Element":"给 div 元素添加背景色","Set the id of an Element":"设置元素的 id","Use an id Attribute to Style an Element":"使用 id 属性来设定元素的样式","Adjust the Padding of an Element":"调整元素的内边距","Adjust the Margin of an Element":"调整元素的外边距","Add a Negative Margin to an Element":"给元素添加负外边距","Add Different Padding to Each Side of an Element":"给元素的每一侧添加不同的内边距","Add Different Margins to Each Side of an Element":"给元素的每一侧添加不同的外边距","Use Clockwise Notation to Specify the Padding of an Element":"使用顺时针方向指定元素的内边距","Use Clockwise Notation to Specify the Margin of an Element":"使用顺时针方向指定元素的外边距","Use Attribute Selectors to Style Elements":"使用属性选择器来设置元素的样式","Understand Absolute versus Relative Units":"理解绝对单位与相对单位","Style the HTML Body Element":"给 HTML 的 Body 元素添加样式","Inherit Styles from the Body Element":"从 Body 元素继承样式","Prioritize One Style Over Another":"样式中的优先级","Override Styles in Subsequent CSS":"Class 选择器的优先级高于继承样式","Override Class Declarations by Styling ID Attributes":"ID 选择器优先级高于 Class 选择器","Override Class Declarations with Inline Styles":"内联样式的优先级高于 ID 选择器","Override All Other Styles by using Important":"Important 的优先级最高","Use Hex Code for Specific Colors":"使用十六进制编码获得指定颜色","Use Hex Code to Mix Colors":"使用十六进制编码混合颜色","Use Abbreviated Hex Code":"使用缩写的十六进制编码","Use RGB values to Color Elements":"使用 RGB 值为元素上色","Use RGB to Mix Colors":"使用 RGB 混合颜色","Use CSS Variables to change several elements at once":"使用 CSS 变量一次更改多个元素","Create a custom CSS Variable":"创建一个自定义的 CSS 变量","Use a custom CSS Variable":"使用一个自定义的 CSS 变量","Attach a Fallback value to a CSS Variable":"给 CSS 变量附加回退值","Cascading CSS variables":"层级 CSS 变量","Change a variable for a specific area":"更改特定区域的变量","Use a media query to change a variable":"使用媒体查询更改变量","Introduction to the Applied Visual Design Challenges":"应用视觉设计介绍","Create Visual Balance Using the text-align Property":"使用 text-align 属性创建视觉平衡","Adjust the Width of an Element Using the width Property":"使用 width 属性调整元素的宽度","Adjust the Height of an Element Using the height Property":"使用 height 属性调整元素的高度","Use the strong Tag to Make Text Bold":"使用 strong 标签加粗文本","Use the u Tag to Underline Text":"使用 u 标签给文本添加下划线","Use the em Tag to Italicize Text":"使用 em 标签强调文本","Use the s Tag to Strikethrough Text":"使用 s 标签给文本添加删除线","Create a Horizontal Line Using the hr Element":"使用 hr 标签创建水平线","Adjust the background-color Property of Text":"调整文本的背景色","Adjust the Size of a Header Versus a Paragraph Tag":"调整标题与段落的大小","Add a box-shadow to a Card-like Element":"给卡片元素添加 box-shadow","Decrease the Opacity of an Element":"降低元素的 opactiy","Use the text-transform Property to Make Text Uppercase":"使用 text-transform 属性给文本添加大写效果","Set the font-size for Multiple Heading Elements":"设置多个标题元素的 font-size","Set the font-weight for Multiple Heading Elements":"设置多个标题元素的 font-weight","Set the font-size of Paragraph Text":"设置段落文本的 font-size","Set the line-height of Paragraphs":"设置段落的 line-height","Adjust the Hover State of an Anchor Tag":"调整锚点的悬停状态","Change an Element's Relative Position":"更改元素的相对位置","Move a Relatively Positioned Element with CSS Offsets":"使用 CSS 偏移移动相对定位的元素","Lock an Element to its Parent with Absolute Positioning":"绝对定位的参照物是元素的父元素","Lock an Element to the Browser Window with Fixed Positioning":"固定定位的参照物是浏览器的窗口","Push Elements Left or Right with the float Property":"使用 float 属性将元素左浮动或右浮动","Change the Position of Overlapping Elements with the z-index Property":"使用 z-index 属性更改重叠元素的位置","Center an Element Horizontally Using the margin Property":"使用 margin 属性将元素水平居中","Learn about Complementary Colors":"了解互补色","Learn about Tertiary Colors":"了解三原色","Adjust the Color of Various Elements to Complementary Colors":"将各种元素的颜色调整为互补色","Adjust the Hue of a Color":"调整颜色的色相","Adjust the Tone of a Color":"调整颜色的色调","Create a Gradual CSS Linear Gradient":"创建一个 CSS 线性渐变","Use a CSS Linear Gradient to Create a Striped Element":"使用 CSS 线性渐变创建条纹元素","Create Texture by Adding a Subtle Pattern as a Background Image":"通过添加细微图案作为背景图像来创建纹理","Use the CSS Transform scale Property to Change the Size of an Element":"使用 CSS Transform scale 属性可以更改元素的大小","Use the CSS Transform scale Property to Scale an Element on Hover":"使用CSS Transform scale 属性在悬停时缩放元素","Use the CSS Transform Property skewX to Skew an Element Along the X-Axis":"使用 CSS Transform skex 属性沿X轴倾斜元素","Use the CSS Transform Property skewY to Skew an Element Along the Y-Axis":"使用 CSS Transform skex 属性沿Y轴倾斜元素","Create a Graphic Using CSS":"使用 CSS 创建一个图形","Create a More Complex Shape Using CSS and HTML":"使用 CSS 和 HTML 创建更复杂的形状","Learn How the CSS @keyframes and animation Properties Work":"了解 CSS 的关键帧和动画是如何工作的","Use CSS Animation to Change the Hover State of a Button":"使用CSS动画更改按钮的悬停状态","Modify Fill Mode of an Animation":"修改动画的填充模式","Create Movement Using CSS Animation":"使用 CSS 动画创建运动","Create Visual Direction by Fading an Element from Left to Right":"通过从左到右淡化元素来创建视觉方向","Animate Elements Continually Using an Infinite Animation Count":"使用无限的动画计数制作永不停止的动画","Make a CSS Heartbeat using an Infinite Animation Count":"使用无限的动画计数制作 CSS 心跳","Animate Elements at Variable Rates":"以可变速率来给元素添加动画","Animate Multiple Elements at Variable Rates":"以可变速率来给多个元素添加动画","Change Animation Timing with Keywords":"使用关键字更改动画定时器","Learn How Bezier Curves Work":"学习贝塞尔曲线的原理","Use a Bezier Curve to Move a Graphic":"使用贝塞尔曲线移动图形","Make Motion More Natural Using a Bezier Curve":"使用贝塞尔曲线让运动更加自然","Introduction to the Applied Accessibility Challenges":"应用无障碍介绍","Add a Text Alternative to Images for Visually Impaired Accessibility":"为视觉受损的用户添加替代图像的文本","Know When Alt Text Should be Left Blank":"知道 Alt 文本何时应该留空","Use Headings to Show Hierarchical Relationships of Content":"使用标题显示内容的层次关系","Jump Straight to the Content Using the main Element":"使用 main 元素包裹主题内容","Wrap Content in the article Element":"使用 article 元素包裹文章内容","Make Screen Reader Navigation Easier with the header Landmark":"使用 header 元素使屏幕阅读器更容易导航","Make Screen Reader Navigation Easier with the nav Landmark":"使用 nav 元素使屏幕阅读器更容易导航","Make Screen Reader Navigation Easier with the footer Landmark":"使用 footer 元素使屏幕阅读器更容易导航","Improve Accessibility of Audio Content with the audio Element":"使用 audio 元素提高音频内容的可访问性","Improve Chart Accessibility with the figure Element":"使用 figure 元素提高图表的可访问性","Improve Form Field Accessibility with the label Element":"使用 label 元素提高表单的可访问性","Wrap Radio Buttons in a fieldset Element for Better Accessibility":"将单选按钮包裹在 fieldset 元素中以获得更好的可访问性","Add an Accessible Date Picker":"添加可访问的日期选择器","Standardize Times with the HTML5 datetime Attribute":"使用 HTML5 的 datatime 属性标准化时间","Make Elements Only Visible to a Screen Reader by Using Custom CSS":"使用自定义 CSS 让元素仅对屏幕阅读器可见","Improve Readability with High Contrast Text":"使用高对比度文本提高可读性","Avoid Colorblindness Issues by Using Sufficient Contrast":"通过使用充足的对比度避免色盲问题","Avoid Colorblindness Issues by Carefully Choosing Colors that Convey Information":"通过仔细选择传达信息的颜色来避免色盲问题","Give Links Meaning by Using Descriptive Link Text":"使用描述性链接文本赋予链接含义","Make Links Navigatable with HTML Access Keys":"通过给元素添加 accesskey 属性来让用户可以在链接之间快速导航","Use tabindex to Add Keyboard Focus to an Element":"使用 tabindex 将键盘焦点添加到元素中","Use tabindex to Specify the Order of Keyboard Focus for Several Elements":"使用 tabindex 指定多个元素的键盘焦点顺序","Introduction to the Responsive Web Design Challenges":"响应式 Web 设计介绍","Create a Media Query":"创建一个媒介查询","Make an Image Responsive":"使图片根据设备尺寸自如响应","Use a Retina Image for Higher Resolution Displays":"针对高分辨率屏幕应使用视网膜图片","Make Typography Responsive":"使排版根据设备尺寸自如响应","Introduction to the CSS Flexbox Challenges":"CSS弹性盒子介绍","Use display: flex to Position Two Boxes":"使用 display: flex 定位两个盒子","Add Flex Superpowers to the Tweet Embed":"在推文中添加弹性盒子布局","Use the flex-direction Property to Make a Row":"使用 flex-direction 属性创建一行","Apply the flex-direction Property to Create Rows in the Tweet Embed":"在推文中使用 flex-direction 创建多行","Use the flex-direction Property to Make a Column":"使用 flex-direction 属性创建一列","Apply the flex-direction Property to Create a Column in the Tweet Embed":"在推文中使用 flex-direction 创建多列","Align Elements Using the justify-content Property":"使用 justify-content 属性对齐元素","Use the justify-content Property in the Tweet Embed":"在推文中使用 justify-content 属性","Align Elements Using the align-items Property":"使用 align-items 属性对齐元素","Use the align-items Property in the Tweet Embed":"在推文中使用 align-items 属性","Use the flex-wrap Property to Wrap a Row or Column":"使用 flex-wrap 属性包裹一行或一列","Use the flex-shrink Property to Shrink Items":"使用 flex-shrink 属性收缩项目","Use the flex-grow Property to Expand Items":"使用 flex-grow 属性扩展项目","Use the flex-basis Property to Set the Initial Size of an Item":"使用 flex-basis 属性设置项目的初始大小","Use the flex Shorthand Property":"使用 flex 短方法属性","Use the order Property to Rearrange Items":"使用 order 属性重新排列项目","Use the align-self Property":"使用 align-self 属性","Introduction to the CSS Grid Challenges":"CSS 网格介绍","Create Your First CSS Grid":"创建你的第一个 CSS 网格","Add Columns with grid-template-columns":"使用 grid-template-columns 添加多列","Add Rows with grid-template-rows":"使用 grid-template-rows 添加多行","Use CSS Grid units to Change the Size of Columns and Rows":"使用 CSS 网格单位来更改列和行的大小","Create a Column Gap Using grid-column-gap":"使用 grid-column-gap 创建多列之间的间距","Create a Row Gap using grid-row-gap":"使用 grid-row-gap 创建多行之间的间距","Add Gaps Faster with grid-gap":"使用 grid-gap 更快地添加间距","Use grid-column to Control Spacing":"使用 grid-column 来控制剩余部分","Use grid-row to Control Spacing":"使用 grid-row 来控制剩余部分","Align an Item Horizontally using justify-self":"使用 justify-self 水平对齐项目","Align an Item Vertically using align-self":"使用 align-self 垂直对齐项目","Align All Items Horizontally using justify-items":"使用 justify-items 水平对齐所有项目","Align All Items Vertically using align-items":"使用 align-items 垂直对齐所有项目","Divide the Grid Into an Area Template":"将网格划分为区域模板","Place Items in Grid Areas Using the grid-area Property":"使用 grid-area 属性将项目放置在网格区域中","Use grid-area Without Creating an Areas Template":"使用 grid-area 创建区域模板","Reduce Repetition Using the repeat Function":"使用 repeat 函数减少重复","Limit Item Size Using the minmax Function":"使用 minmax 函数限制项目大小","Create Flexible Layouts Using auto-fill":"使用 auto-fill 创建弹性布局","Create Flexible Layouts Using auto-fit":"使用 auto-fit 创建弹性布局","Use Media Queries to Create Responsive Layouts":"使用媒体查询创建响应式布局","Create Grids within Grids":"在网格中创建网格","Introduction to the Responsive Web Design Projects":"响应式 Web 设计项目介绍","Build a Tribute Page":"制作一个致敬页","Build a Survey Form":"制作一个调查表格","Build a Product Landing Page":"制作一个产品登录页","Build a Technical Documentation Page":"制作一个技术文档页面","Build a Personal Portfolio Webpage":"制作一个个人作品集网页","Introduction to JavaScript":"JavaScript 介绍","Comment Your JavaScript Code":"给代码添加注释","Declare JavaScript Variables":"声明变量","Storing Values with the Assignment Operator":"使用赋值运算符存储值","Initializing Variables with the Assignment Operator":"使用赋值运算符初始化变量","Understanding Uninitialized Variables":"理解未初始化的变量","Understanding Case Sensitivity in Variables":"了解变量名区分大小写","Add Two Numbers with JavaScript":"加法运算","Subtract One Number from Another with JavaScript":"减法运算","Multiply Two Numbers with JavaScript":"乘法运算","Divide One Number by Another with JavaScript":"除法运算","Increment a Number with JavaScript":"数字递增","Decrement a Number with JavaScript":"数字递减","Create Decimal Numbers with JavaScript":"创建一个小数","Multiply Two Decimals with JavaScript":"两个小数相乘","Divide One Decimal by Another with JavaScript":"两个小数相除","Finding a Remainder in JavaScript":"求余运算","Compound Assignment With Augmented Addition":"复合赋值之 +=","Compound Assignment With Augmented Subtraction":"复合赋值之 -=","Compound Assignment With Augmented Multiplication":"复合赋值之 *=","Compound Assignment With Augmented Division":"复合赋值之 /=","Declare String Variables":"声明字符串变量","Escaping Literal Quotes in Strings":"转义字符串中的引号","Quoting Strings with Single Quotes":"用单引号引用字符串","Escape Sequences in Strings":"字符串中的转义序列","Concatenating Strings with Plus Operator":"用加号运算符连接字符串","Concatenating Strings with the Plus Equals Operator":"用 += 运算符连接字符串","Constructing Strings with Variables":"用变量构造字符串","Appending Variables to Strings":"将变量附加到字符串","Find the Length of a String":"查找字符串的长度","Use Bracket Notation to Find the First Character in a String":"使用方括号查找字符串中的第一个字符","Understand String Immutability":"了解字符串的不变性","Use Bracket Notation to Find the Nth Character in a String":"使用方括号查找字符串中的第N个字符","Use Bracket Notation to Find the Last Character in a String":"使用方括号查找字符串中的最后一个字符","Use Bracket Notation to Find the Nth-to-Last Character in a String":"使用方括号查找字符串中的第N个字符到最后一个字符","Word Blanks":"填词造句","Store Multiple Values in one Variable using JavaScript Arrays":"使用 JavaScript 数组将多个值存储在一个变量中","Nest one Array within Another Array":"将一个数组嵌套在另一个数组中","Access Array Data with Indexes":"通过索引访问数组中的数据","Modify Array Data With Indexes":"通过索引修改数组中的数据","Access Multi-Dimensional Arrays With Indexes":"使用索引访问多维数组","Manipulate Arrays With push()":"使用 push() 操作数组","Manipulate Arrays With pop()":"使用 pop() 操作数组","Manipulate Arrays With shift()":"使用 shift() 操作数组","Manipulate Arrays With unshift()":"使用 unshift() 操作数组","Shopping List":"购物清单","Write Reusable JavaScript with Functions":"用函数编写可重用代码","Passing Values to Functions with Arguments":"将值传递给带有参数的函数","Global Scope and Functions":"全局作用域和函数","Local Scope and Functions":"局部作用域和函数","Global vs. Local Scope in Functions":"函数中的全局作用域和局部作用域","Return a Value from a Function with Return":"函数可以返回某个值","Understanding Undefined Value returned from a Function":"函数也可以返回 undefined","Assignment with a Returned Value":"用返回值来赋值","Stand in Line":"排队","Understanding Boolean Values":"理解布尔值","Use Conditional Logic with If Statements":"用 if 语句来表达条件逻辑","Comparison with the Equality Operator":"相等运算符","Comparison with the Strict Equality Operator":"严格相等运算符","Practice comparing different values":"比较不同值","Comparison with the Inequality Operator":"不等运算符","Comparison with the Strict Inequality Operator":"严格不等运算符","Comparison with the Greater Than Operator":"大于运算符","Comparison with the Greater Than Or Equal To Operator":"大于或等于运算符","Comparison with the Less Than Operator":"小于运算符","Comparison with the Less Than Or Equal To Operator":"小于或等于运算符","Comparisons with the Logical And Operator":"逻辑与运算符","Comparisons with the Logical Or Operator":"逻辑或运算符","Introducing Else Statements":"介绍 else 语句","Introducing Else If Statements":"介绍 else if 语句","Logical Order in If Else Statements":"if else 语句中的逻辑顺序","Chaining If Else Statements":"多个 if else 语句","Golf Code":"高尔夫代码","Selecting from Many Options with Switch Statements":"使用 Switch 语句从许多选项中进行选择","Adding a Default Option in Switch Statements":"在 Switch 语句中添加默认选项","Multiple Identical Options in Switch Statements":"在 Switch 语句添加多个相同选项","Replacing If Else Chains with Switch":"用一个 Switch 语句来替代多个 if else 语句","Returning Boolean Values from Functions":"从函数返回布尔值","Return Early Pattern for Functions":"函数执行到 return 语句就结束","Counting Cards":"21点游戏","Build JavaScript Objects":"新建 JavaScript 对象","Accessing Object Properties with Dot Notation":"通过点符号访问对象属性","Accessing Object Properties with Bracket Notation":"通过方括号访问对象属性","Accessing Object Properties with Variables":"通过变量访问对象属性","Updating Object Properties":"更新对象属性","Add New Properties to a JavaScript Object":"给对象添加新属性","Delete Properties from a JavaScript Object":"删除对象的属性","Using Objects for Lookups":"使用对象进行查找","Testing Objects for Properties":"测试对象的属性","Manipulating Complex Objects":"操作复杂对象","Accessing Nested Objects":"访问嵌套对象","Accessing Nested Arrays":"访问嵌套数组","Record Collection":"记录集合","Iterate with JavaScript While Loops":"while 循环","Iterate with JavaScript For Loops":"for 循环","Iterate Odd Numbers With a For Loop":"使用 For 循环遍历数组的奇数","Count Backwards With a For Loop":"使用 For 循环反向遍历数组","Iterate Through an Array with a For Loop":"使用 For 循环遍历数组","Nesting For Loops":"循环嵌套","Iterate with JavaScript Do...While Loops":"do...while 循环","Profile Lookup":"资料查找","Generate Random Fractions with JavaScript":"使用 JavaScript 生成随机分数","Generate Random Whole Numbers with JavaScript":"使用 JavaScript 生成随机整数","Generate Random Whole Numbers within a Range":"生成某个范围内的随机整数","Use the parseInt Function":"使用 parseInt 函数","Use the parseInt Function with a Radix":"使用 parseInt 函数并传入一个基数","Use the Conditional (Ternary) Operator":"使用三元运算符","Use Multiple Conditional (Ternary) Operators":"使用多个三元运算符","Introduction to the ES6 Challenges":"ES6介绍","Explore Differences Between the var and let Keywords":"探索 var 和 let 关键字之间的差异","Compare Scopes of the var and let Keywords":"比较 var 和 let 关键字的作用域","Declare a Read-Only Variable with the const Keyword":"用 const 关键字声明只读变量","Mutate an Array Declared with const":"改变一个用 const 声明的数组","Prevent Object Mutation":"防止对象改变","Use Arrow Functions to Write Concise Anonymous Functions":"使用箭头函数编写简洁的匿名函数","Write Arrow Functions with Parameters":"编写带参数的箭头函数","Write Higher Order Arrow Functions":"编写高阶箭头函数","Set Default Parameters for Your Functions":"设置函数的默认参数","Use the Rest Operator with Function Parameters":"将 rest 操作符与函数参数一起使用","Use the Spread Operator to Evaluate Arrays In-Place":"使用 spread 运算符展开数组项","Use Destructuring Assignment to Assign Variables from Objects":"使用解构赋值从对象中分配变量","Use Destructuring Assignment to Assign Variables from Nested Objects":"使用解构赋值从嵌套对象中分配变量","Use Destructuring Assignment to Assign Variables from Arrays":"使用解构赋值从数组中分配变量","Use Destructuring Assignment with the Rest Operator to Reassign Array Elements":"使用解构赋值配合 rest 操作符来重新分配数组元素","Use Destructuring Assignment to Pass an Object as a Function's Parameters":"使用解构赋值将对象作为函数的参数传递","Create Strings using Template Literals":"使用模板字面量创建字符串","Write Concise Object Literal Declarations Using Simple Fields":"使用简单字段编写简洁的对象字面量声明","Write Concise Declarative Functions with ES6":"用 ES6 编写简洁的函数声明","Use class Syntax to Define a Constructor Function":"使用 class 语法定义构造函数","Use getters and setters to Control Access to an Object":"使用 getter 和 setter 来控制对象的访问","Understand the Differences Between import and require":"了解 import 和 require 之间的差异","Use export to Reuse a Code Block":"用 export 来重用代码块","Use * to Import Everything from a File":"用 * 从文件中导入所有内容","Create an Export Fallback with export default":"用 export default 创建一个默认导出","Import a Default Export":"导入一个默认的导出","Introduction to the Regular Expression Challenges":"正则表达式介绍","Using the Test Method":"使用测试方法","Match Literal Strings":"匹配文字字符串","Match a Literal String with Different Possibilities":"同时用多种模式匹配文字字符串","Ignore Case While Matching":"匹配时忽略大小写","Extract Matches":"提取匹配项","Find More Than the First Match":"全局匹配","Match Anything with Wildcard Period":"用通配符.匹配任何内容","Match Single Character with Multiple Possibilities":"将单个字符与多种可能性匹配","Match Letters of the Alphabet":"匹配字母表中的字母","Match Numbers and Letters of the Alphabet":"匹配字母表中的数字和字母","Match Single Characters Not Specified":"匹配单个未指定的字符","Match Characters that Occur One or More Times":"匹配出现一次或多次的字符","Match Characters that Occur Zero or More Times":"匹配出现零次或多次的字符","Find Characters with Lazy Matching":"用惰性匹配来查找字符","Find One or More Criminals in a Hunt":"在狩猎中找到一个或多个罪犯","Match Beginning String Patterns":"匹配字符串的开头","Match Ending String Patterns":"匹配字符串的末尾","Match All Letters and Numbers":"匹配所有的字母和数字","Match Everything But Letters and Numbers":"匹配除了字母和数字的所有符号","Match All Numbers":"匹配所有数字","Match All Non-Numbers":"匹配所有非数字","Restrict Possible Usernames":"限制可能的用户名","Match Whitespace":"匹配空白字符","Match Non-Whitespace Characters":"匹配非空白字符","Specify Upper and Lower Number of Matches":"指定匹配的上限和下限","Specify Only the Lower Number of Matches":"只指定匹配的下限","Specify Exact Number of Matches":"指定匹配的确切数量","Check for All or None":"检查全部或无","Positive and Negative Lookahead":"正向先行断言和负向先行断言","Reuse Patterns Using Capture Groups":"使用捕获组重用模式","Use Capture Groups to Search and Replace":"使用捕获组搜索和替换","Remove Whitespace from Start and End":"删除开头和结尾的空白","Introduction to the Debugging Challenges":"调试介绍","Use the JavaScript Console to Check the Value of a Variable":"使用控制台检查变量值","Understanding the Differences between the freeCodeCamp and Browser Console":"了解 freeCodeCamp 和浏览器控制台之间的差异","Use typeof to Check the Type of a Variable":"使用 type of 检查变量的类型","Catch Misspelled Variable and Function Names":"捕获拼错的变量名和函数名","Catch Unclosed Parentheses, Brackets, Braces and Quotes":"捕获未闭合的括号、方括号、大括号和引号","Catch Mixed Usage of Single and Double Quotes":"捕捉单引号和双引号的混合用法","Catch Use of Assignment Operator Instead of Equality Operator":"捕获使用赋值运算符而不是相等运算符","Catch Missing Open and Closing Parenthesis After a Function Call":"捕捉函数调用后缺少的左括号和右括号","Catch Arguments Passed in the Wrong Order When Calling a Function":"调用函数时，捕获以错误顺序传递的参数","Catch Off By One Errors When Using Indexing":"捕获使用索引的时候出现的错误","Use Caution When Reinitializing Variables Inside a Loop":"重新初始化循环中的变量时要小心","Prevent Infinite Loops with a Valid Terminal Condition":"使用有效的终止条件防止无限循环","Introduction to the Basic Data Structure Challenges":"数据结构基础介绍","Use an Array to Store a Collection of Data":"使用数组存储数据集合","Access an Array's Contents Using Bracket Notation":"使用方括号访问数组的内容","Add Items to an Array with push() and unshift()":"使用 push() 和 unshift() 添加项目到数组中","Remove Items from an Array with pop() and shift()":"使用 pop() 和 shift() 从数组中删除项目","Remove Items Using splice()":"使用 splice() 删除项目","Add Items Using splice()":"使用 splice() 增加项目","Copy Array Items Using slice()":"使用 slice() 拷贝数组项目","Copy an Array with the Spread Operator":"使用扩展运算符复制数组","Combine Arrays with the Spread Operator":"组合使用数组和扩展运算符","Check For The Presence of an Element With indexOf()":"使用 indexOf() 检查元素是否存在","Iterate Through All an Array's Items Using For Loops":"使用 For 循环迭代数组的所有项","Create complex multi-dimensional arrays":"创建复杂的多维数组","Add Key-Value Pairs to JavaScript Objects":"将键值对添加到对象中","Modify an Object Nested Within an Object":"修改嵌套在对象中的对象","Access Property Names with Bracket Notation":"使用方括号访问属性名称","Use the delete Keyword to Remove Object Properties":"使用 delete 关键字删除对象属性","Check if an Object has a Property":"检查对象是否具有某个属性"," Iterate Through the Keys of an Object with a for...in Statement":"使用 for...in 语句迭代对象","Generate an Array of All Object Keys with Object.keys()":"使用 Object.Keys() 生成对象所有键组成的数组","Modify an Array Stored in an Object":"修改存储在对象中的数组","Introduction to Basic Algorithm Scripting":"算法基础介绍","Convert Celsius to Fahrenheit":"将摄氏温度转换成华氏温度","Reverse a String":"翻转字符串","Factorialize a Number":"数字的阶乘","Find the Longest Word in a String":"查找字符串中最长的单词","Return Largest Numbers in Arrays":"返回数组中最大的数字","Confirm the Ending":"检查字符串的结尾","Repeat a String Repeat a String":"重复字符串","Truncate a String":"截断字符串","Finders Keepers":"发现者与看护者","Boo who":"真假测试","Title Case a Sentence":"单词的首字母大写","Slice and Splice":"slice 和 splice","Falsy Bouncer":"去除数组中的假值","Where do I Belong":"我身在何处","Mutations":"集合之间的关系","Chunky Monkey":"猴子吃香蕉","Introduction to the Object Oriented Programming Challenges":"面向对象编程介绍","Create a Basic JavaScript Object":"创建一个基本的 JavaScript 对象","Use Dot Notation to Access the Properties of an Object":"使用点符号来访问对象的属性","Create a Method on an Object":"在对象上创建方法","Make Code More Reusable with the this Keyword":"使用 this 关键字使代码更加可重用","Define a Constructor Function":"定义构造函数","Use a Constructor to Create Objects":"使用构造函数创建对象","Extend Constructors to Receive Arguments":"扩展构造函数以接收参数","Verify an Object's Constructor with instanceof":"使用 instance of 验证对象的构造函数","Understand Own Properties":"了解自己的属性","Use Prototype Properties to Reduce Duplicate Code":"使用原型属性来减少重复代码","Iterate Over All Properties":"迭代所有属性","Understand the Constructor Property":"了解构造函数属性","Change the Prototype to a New Object":"将原型更改为新对象","Remember to Set the Constructor Property when Changing the Prototype":"更改原型时，记得设置构造函数属性","Understand Where an Object’s Prototype Comes From":"了解对象的原型来自哪里","Understand the Prototype Chain":"了解原型链","Use Inheritance So You Don't Repeat Yourself":"使用继承避免重复","Inherit Behaviors from a Supertype":"从超类继承行为","Set the Child's Prototype to an Instance of the Parent":"将子辈的原型设置为父辈的实例","Reset an Inherited Constructor Property":"重置一个继承的构造函数属性","Add Methods After Inheritance":"继承后添加方法","Override Inherited Methods":"重写继承的方法","Use a Mixin to Add Common Behavior Between Unrelated Objects":"使用 Mixin 在不相关对象之间添加共同行为","Use Closure to Protect Properties Within an Object from Being Modified Externally":"使用闭包保护对象内的属性不被外部修改","Understand the Immediately Invoked Function Expression (IIFE)":"了解立即调用函数表达（IIFE）","Use an IIFE to Create a Module":" 使用 IIFE 创建一个模块","Introduction to the Functional Programming Challenges":"函数式编程介绍","Learn About Functional Programming":"学习函数式编程","Understand Functional Programming Terminology":"了解函数式编程术语","Understand the Hazards of Using Imperative Code":"了解使用命令式编程的危害","Avoid Mutations and Side Effects Using Functional Programming":"使用函数式编程避免突变和副作用","Pass Arguments to Avoid External Dependence in a Function":"传递参数以避免函数中的外部依赖","Refactor Global Variables Out of Functions":"在函数中重构全局变量","Use the map Method to Extract Data from an Array":"使用 map 方法从数组中提取数据","Implement map on a Prototype":"在原型上实现 map 方法","Use the filter Method to Extract Data from an Array":"使用 filter 方法从数组中提取数据","Implement the filter Method on a Prototype":"在原型上实现 filter 方法","Return Part of an Array Using the slice Method":"使用 slice 方法返回数组的一部分","Remove Elements from an Array Using slice Instead of splice":"使用 slice 而不是 splice 从数组中移除元素","Combine Two Arrays Using the concat Method":"使用 concat 方法组合两个数组","Add Elements to the End of an Array Using concat Instead of push":"使用 concat 而不是 push 将元素添加到数组的末尾","Use the reduce Method to Analyze Data":"使用 reduce 方法分析数据","Sort an Array Alphabetically using the sort Method":"使用 sort 方法按字母顺序给数组排序","Return a Sorted Array Without Changing the Original Array":"在不更改原始数组的前提下返回排序后的数组","Split a String into an Array Using the split Method":"使用 split 方法将字符串拆分成数组","Combine an Array into a String Using the join Method":"使用 join 方法将数组组合成字符串","Apply Functional Programming to Convert Strings to URL Slugs":"应用函数式编程将字符串转换为URL片段","Use the every Method to Check that Every Element in an Array Meets a Criteria":"使用 every 方法检查数组中的每个元素是否符合条件","Use the some Method to Check that Any Elements in an Array Meet a Criteria":"使用 some 方法检查数组中是否有元素是否符合条件","Introduction to Currying and Partial Application":"函数柯里化","Introduction to the Intermediate Algorithm Scripting Challenges":"算法中级介绍","Sum All Numbers in a Range":"范围内的数字求和","Diff Two Arrays":"区分两个数组","Seek and Destroy":"瞄准和消灭","Wherefore art thou":"罗密欧与朱丽叶","Spinal Tap Case":"短线连接格式","Pig Latin":"儿童黑话","Search and Replace":"搜索和替换","DNA Pairing":"DNA 配对","Missing letters":"丢失的字母","Sorted Union":"集合排序","Convert HTML Entities":"转换HTML实体","Sum All Odd Fibonacci Numbers":"求斐波那契数组中的奇数之和","Sum All Primes":"对所有素数求和","Smallest Common Multiple":"最小公倍数","Drop it":"放弃","Steamroller":"扁平化","Binary Agents":"二进制转化","Everything Be True":"真假值判断","Arguments Optional":"可选参数","Make a Person":"构造一个 Person 类","Map the Debris":"绘制碎片图","Introduction to the JavaScript Algorithms and Data Structures Projects":"算法和数据结构介绍","Palindrome Checker":"回文检查器","Roman Numeral Converter":"罗马数字转换器","Caesars Cipher":"凯撒密码","Telephone Number Validator":"电话号码验证器","Cash Register":"收银机","Introduction to the Bootstrap Challenges":"Bootstrap 介绍","Use Responsive Design with Bootstrap Fluid Containers":"使用 Fluid 容器实现响应式设计","Make Images Mobile Responsive":"使图片自适应移动端","Center Text with Bootstrap":"用 Bootstrap 居中文本","Create a Bootstrap Button":"创建一个 Bootstrap 按钮","Create a Block Element Bootstrap Button":"创建一个 Bootstrap 块级元素","Taste the Bootstrap Button Color Rainbow":"体验 Bootstrap 彩虹色的按钮","Call out Optional Actions with btn-info":"使用 btn-info 调出可选操作","Warn Your Users of a Dangerous Action with btn-danger":"使用 btn-danger 警告你的用户，这是危险操作。","Use the Bootstrap Grid to Put Elements Side By Side":"使用 Bootstrap 网格并排放置元素","Ditch Custom CSS for Bootstrap":"用 Bootstrap 来取代我们之前的自定义样式","Use a span to Target Inline Elements":"使用 span 创建行内元素","Create a Custom Heading":"创建自定义标题","Add Font Awesome Icons to our Buttons":"将字体图标添加到我们的按钮中","Add Font Awesome Icons to all of our Buttons":"将字体图标添加到我们所有的按钮上","Responsively Style Radio Buttons":"响应式风格的单选按钮","Responsively Style Checkboxes":"响应式风格的复选框","Style Text Inputs as Form Controls":"给表单控件的输入框添加样式","Line up Form Elements Responsively with Bootstrap":"使用 Bootstrap 响应式排列表单元素","Create a Bootstrap Headline":"创建一个 Bootstrap 标题","House our page within a Bootstrap container-fluid div":"将我们的页面放在 Fluid 容器中","Create a Bootstrap Row":"创建一个 Bootstrap Row","Split Your Bootstrap Row":"分割你的 Bootstrap Row","Create Bootstrap Wells":"创建 Bootstrap Wells","Add Elements within Your Bootstrap Wells":"在 Bootstrap Wells 中添加元素","Apply the Default Bootstrap Button Style":"给 Bootstrap 按钮添加默认样式","Create a Class to Target with jQuery Selectors":"分别给每个目标元素的 class 属性添加一个 target 值","Add id Attributes to Bootstrap Elements":"给 Bootstrap 元素添加id属性","Label Bootstrap Wells":"给 Bootstrap Wells 贴标签","Give Each Element a Unique id":"给每个元素一个唯一的 id","Label Bootstrap Buttons":"给 Bootstrap 按钮贴标签","Use Comments to Clarify Code":"使用注释来说明代码","Introduction to jQuery":"jQuery 介绍","Learn How Script Tags and Document Ready Work":"了解 Script 和 Document 是如何工作的","Target HTML Elements with Selectors Using jQuery":"使用 jQuery 配合元素选择器选择元素","Target Elements by Class Using jQuery":"使用 jQuery 配合 class 选择器选择元素","Target Elements by id Using jQuery":"使用 jQuery 配合 id 选择器选择元素","Delete Your jQuery Functions":"删除 jQuery 函数","Target the Same Element with Multiple jQuery Selectors":"用多个 jQuery 选择器瞄准同一个元素","Remove Classes from an Element with jQuery":"使用 jQuery 从元素中移除 class","Change the CSS of an Element Using jQuery":"使用 jQuery 更改元素的 CSS","Disable an Element Using jQuery":"使用 jQuery 禁用元素","Change Text Inside an Element Using jQuery":"使用 jQuery 更改元素内部的文本","Remove an Element Using jQuery":"使用 jQuery 删除元素","Use appendTo to Move Elements with jQuery":"使用 jQuery 的 appendTo 方法可以移动元素","Clone an Element Using jQuery":"使用 jQuery 克隆元素","Target the Parent of an Element Using jQuery":"使用 jQuery 选择元素的父元素","Target the Children of an Element Using jQuery":"使用 jQuery 选择元素的子元素","Target a Specific Child of an Element Using jQuery":"使用 jQuery 选择元素的特定子元素","Target Even Elements Using jQuery":"使用 jQuery 选择偶数元素","Use jQuery to Modify the Entire Page":"使用 jQuery 修改整个页面","Introduction to the Sass Challenges":"Sass 介绍","Store Data with Sass Variables":"用 Sass 变量存储数据","Nest CSS with Sass":"用 Sass 嵌套 CSS","Create Reusable CSS with Mixins":"用 Mixins 创建可重用 CSS","Use @if and @else to Add Logic To Your Styles":"使用 @if 和 @else 为你的样式添加逻辑","Use @for to Create a Sass Loop":"使用 @for 创建一个 Sass 循环","Use @each to Map Over Items in a List":"使用 @each 遍历列表中的项目","Apply a Style Until a Condition is Met with @while":"使用 @while 当条件满足时样式生效","Split Your Styles into Smaller Chunks with Partials":"用 Partials 将你的样式分成小块","Extend One Set of CSS Styles to Another Element":"将一组CSS样式扩展到另一个元素","Introduction to the React Challenges":"React 介绍","Create a Simple JSX Element":"创建一个简单的 JSX 元素","Create a Complex JSX Element":"创建一个复杂的 JSX 元素","Add Comments in JSX":"在 JSX 中添加注释","Render HTML Elements to the DOM":"渲染 HTML 元素为 DOM 树","Define an HTML Class in JSX":"在 JSX 中定义一个 HTML Class","Learn About Self-Closing JSX Tags":"了解自动闭合的 JSX 标记","Create a Stateless Functional Component":"创建一个无状态的函数组件","Create a React Component":"创建一个 React 组件","Create a Component with Composition":"用组合的方式创建一个 React 组件 ","Use React to Render Nested Components":"使用 React 渲染嵌套组件","Compose React Components":"组合 React 组件","Render a Class Component to the DOM":"渲染 class 组件为 Dom 树","Write a React Component from Scratch":"从零开始写一个 React 组件","Pass Props to a Stateless Functional Component":"将 Props 传递给无状态函数组件","Pass an Array as Props":"传递一个数组作为 Props","Use Default Props":"使用默认的 Props","Override Default Props":"覆盖默认的 Props","Use PropTypes to Define the Props You Expect":"使用 PropTypes 来定义你期望的 Props","Access Props Using this.props":"使用 this.props 访问 Props","Review Using Props with Stateless Functional Components":"复习如何使用 Props 和无状态函数组件","Create a Stateful Component":"创建一个有状态的组件","Render State in the User Interface":"在用户界面中渲染状态","Render State in the User Interface Another Way":"以另一种方式在用户界面中渲染状态","Set State with this.setState":"用 this.setState 设置状态","Bind 'this' to a Class Method":"将 this 绑定到 Class 方法","Use State to Toggle an Element":"使用 State 切换元素","Write a Simple Counter":"写一个简单的计数器","Create a Controlled Input":"创建一个可以控制的输入框","Create a Controlled Form":"创建一个可以控制的表单","Pass State as Props to Child Components":"将 State 作为 Props 传递给子组件","Pass a Callback as Props":"传递回调作为 Props","Use the Lifecycle Method componentWillMount":"使用生命周期方法：componentWillMount","Use the Lifecycle Method componentDidMount":"使用生命周期方法：componentDidMount","Add Event Listeners":"添加事件侦听器","Manage Updates with Lifecycle Methods":"使用生命周期方法管理更新","Optimize Re-Renders with shouldComponentUpdate":"使用 shouldComponentUpdate 优化重新渲染","Introducing Inline Styles":"介绍内联样式","Add Inline Styles in React":"在 React 中添加内联样式","Use Advanced JavaScript in React Render Method":"在 React Render 方法中使用 JavaScript","Render with an If/Else Condition":"使用 If/Else 条件进行渲染","Use && for a More Concise Conditional":"使用 && 获得更简洁的条件","Use a Ternary Expression for Conditional Rendering":"使用三元表达式进行条件渲染","Render Conditionally from Props":"根据 Props 有条件地渲染","Change Inline CSS Conditionally Based on Component State":"根据组件状态有条件地更改内联 CSS","Use Array.map() to Dynamically Render Elements":"使用 Array.map() 动态渲染元素","Give Sibling Elements a Unique Key Attribute":"给同级元素一个唯一的键属性","Use Array.filter() to Dynamically Filter an Array":"使用 Array.Filter() 动态过滤数组","Render React on the Server with renderToString":"用 renderToString 在服务器上渲染 React","Introduction to the Redux Challenges":"Redux 介绍","Create a Redux Store":"创建一个 Redux Store","Get State from the Redux Store":"从 Redux Store 获取状态","Define a Redux Action":"定义一个 Redux Action","Define an Action Creator":"定义一个 Action Creator","Dispatch an Action Event":"分发 Action Event","Handle an Action in the Store":"在 Store 里处理 Action","Use a Switch Statement to Handle Multiple Actions":"使用 Switch 语句处理多个 Actions","Use const for Action Types":"使用 const 声明 Action Types","Register a Store Listener":"注册 Store 监听器","Combine Multiple Reducers":"组合多个 Reduces","Send Action Data to the Store":"发送 Action Data 给 Store","Use Middleware to Handle Asynchronous Actions":"使用中间件处理异步操作","Write a Counter with Redux":"用 Redux 写一个计数器","Never Mutate State":"永不改变状态","Use the Spread Operator on Arrays":"在数组中使用扩展运算符","Remove an Item from an Array":"从数组中删除项目","Copy an Object with Object.assign":"使用 Object.assign 拷贝对象","Introduction to the React and Redux Challenges":"React 和 Redux 介绍","Getting Started with React Redux":"React 和 Redux 入门","Manage State Locally First":"首先在本地管理状态","Extract State Logic to Redux":"提取状态逻辑给 Redux","Use Provider to Connect Redux to React":"使用 Provider 连接 Redux 和 React","Map State to Props":"映射 State 到 Props","Map Dispatch to Props":"映射 Dispatch 到 Props","Connect Redux to React":"连接 Redux 和 React","Connect Redux to the Messages App":"将 Redux 连接到 Messages App","Extract Local State into Redux":"将局部状态提取到 Redux 中","Moving Forward From Here":"从这里前进","Introduction to the Front End Libraries Projects":"项目实战介绍","Build a Random Quote Machine":"构建一个随机引语生成器","Build a Markdown Previewer":"构建一个 Markdown 文件预览器","Build a Drum Machine":"构建一台鼓式机器","Build a JavaScript Calculator":"构建一个 JavaScript 计算器","Build a Pomodoro Clock":"构建一个番茄时钟","Introduction to the Data Visualization with D3 Challenges":"数据可视化","Add Document Elements with D3":"用 D3 给文档添加元素","Select a Group of Elements with D3":"用 D3 选择一组元素","Work with Data in D3":"使用 D3 中的数据","Work with Dynamic Data in D3":"使用 D3 中的动态数据","Add Inline Styling to Elements":"给元素添加内联样式","Change Styles Based on Data":"根据数据更改样式","Add Classes with D3":"用 D3 添加 Class","Update the Height of an Element Dynamically":"动态更新元素的高度","Change the Presentation of a Bar Chart":"更改条形图的显示方式","Learn About SVG in D3":"了解 D3 中的 SVG","Display Shapes with SVG":"用 SVG 显示形状","Create a Bar for Each Data Point in the Set":"为集合中的每个数据点创建一个 Bar","Dynamically Set the Coordinates for Each Bar":"动态设置每个 Bar 的坐标","Dynamically Change the Height of Each Bar":"动态更改每个条的高度","Invert SVG Elements":"反转 SVG 元素","Change the Color of an SVG Element":"更改 SVG 元素的颜色","Add Labels to D3 Elements":"给 D3 元素添加标签","Style D3 Labels":"给 D3 标签添加样式","Add a Hover Effect to a D3 Element":"给 D3 元素添加悬停效果","Add a Tooltip to a D3 Element":"给 D3 元素添加工具提示","Create a Scatterplot with SVG Circles":"使用 SVG Circles 创建散点图","Add Attributes to the Circle Elements":"给 Circle 元素添加属性","Add Labels to Scatter Plot Circles":"向散点图的 Circles 添加标签","Create a Linear Scale with D3":"用 D3 创建线性比例","Set a Domain and a Range on a Scale":"按比例设置域和范围","Use the d3.max and d3.min Functions to Find Minimum and Maximum Values in a Dataset":"使用 d3.max 和 d3.min 函数在数据集中查找最小值和最大值","Use Dynamic Scales":"使用动态比例","Use a Pre-Defined Scale to Place Elements":"使用预定义的比例放置元素","Add Axes to a Visualization":"添加坐标轴到可视化中","Introduction to the JSON APIs and AJAX Challenges":"介绍 JSON 和 AJAX","Handle Click Events with JavaScript using the onclick property":"使用 onclick 属性处理点击事件","Change Text with click Events":"通过单击事件更改文本","Get JSON with the JavaScript XMLHttpRequest Method":"使用 XMLHttpRequest 方法获取 JSON","Access the JSON Data from an API":"访问来自 API 的 JSON 数据","Convert JSON Data to HTML":"将 JSON 数据转换为 HTML","Render Images from Data Sources":"渲染数据源的图像","Pre-filter JSON to Get the Data You Need":"预先过滤 JSON 以获得所需的数据","Get Geolocation Data to Find A User's GPS Coordinates":"根据地理位置数据找到用户的 GPS 坐标","Post Data with the JavaScript XMLHttpRequest Method":"使用 XMLHttpRequest 方法发送数据","Introduction to the Data Visualization Projects":"介绍数据可视化","Visualize Data with a Bar Chart":"用条形图可视化数据","Visualize Data with a Scatterplot Graph":"用散点图可视化数据","Visualize Data with a Heat Map":"用热图可视化数据","Visualize Data with a Choropleth Map":"用地区分布图可视化数据","Visualize Data with a Treemap Diagram":"用树形图可视化数据","Introduction to the Managing Packages with npm Challenges":"介绍 Node 包管理器——npm","How to Use package.json, the Core of Any Node.js Project or npm Package":"如何使用 package.json 成为 Node.js 项目或 npm 包的核心","Add a Description to Your package.json":"给 package.json 添加一个描述","Add Keywords to Your package.json":"给 package.json 添加关键词","Add a License to Your package.json":"给 package.json 添加许可证","Add a Version to Your package.json":"给 package.json 添加版本号","Expand Your Project with External Packages from npm":"使用 npm 的外部软件包扩展您的项目","Manage npm Dependencies By Understanding Semantic Versioning":"通过理解语义版本化来管理 npm 依赖关系","Use the Tilde-Character to Always Use the Latest Patch Version of a Dependency":"用波浪字符始终使用依赖项的最新补丁版本","Use the Caret-Character to Use the Latest Minor Version of a Dependency":"用插入字符可以使用依赖项的最新次要版本","Remove a Package from Your Dependencies":"从依赖项中删除包","Introduction to the Basic Node and Express Challenges":"介绍 Node 和 Express 基础","Meet the Node console":"认识 Node 的控制台","Start a Working Express Server":"启动一个 Express 服务器","Serve an HTML File":"服务 HTML 文件","Serve Static Assets":"服务静态资源","Serve JSON on a Specific Route":"服务指定路由上的 JSON","Use the .env File":"使用 .env 文件","Implement a Root-Level Request Logger Middleware":"实现一个根层的请求记录器中间件","Chain Middleware to Create a Time Server":"使用链中间件来创建时间服务器","Get Route Parameter Input from the Client":"从客户端获取路由参数输入","Get Query Parameter Input from the Client":"从客户端获取查询参数输入","Use body-parser to Parse POST Requests":"使用 body-parser 来解析POST请求","Get Data from POST Requests":"从 POST 请求中获取数据","Introduction to the MongoDB and Mongoose Challenges":"介绍 MongogDB 和 Mongoose","Install and Set Up Mongoose":"安装和设置 Mongoose","Create a Model":"创建一个模型","Create and Save a Record of a Model":"用模型来创建并保存一条记录","Create Many Records with model.create()":"使用 model.create() 创建许多记录","Use model.find() to Search Your Database":"使用 model.find() 查找数据库","Use model.findOne() to Return a Single Matching Document from Your Database":"使用 model.findOne() 从数据库中返回一个匹配的文档","Use model.findById() to Search Your Database By _id":"使用 model.findById() 按 _id 搜索数据库","Perform Classic Updates by Running Find, Edit, then Save":"通过运行 find、edit、save 来执行经典更新","Perform New Updates on a Document Using model.findOneAndUpdate()":"使用 model.findOneAndUpdate() 对文档执行新的更新","Delete One Document Using model.findByIdAndRemove":"使用 model.findByIdAndRemove() 删除一个文档","Delete Many Documents with model.remove()":"使用 model.remove() 删除许多文档","Chain Search Query Helpers to Narrow Search Results":"通过链搜索查询帮助器缩小搜索结果","Introduction to the APIs and Microservices Projects":"介绍 API 和 微服务","Timestamp Microservice":"时间戳","Request Header Parser Microservice":"请求头解析器","URL Shortener Microservice":"短网址","Exercise Tracker":"运动跟踪器","File Metadata Microservice":"文件元数据","Introduction to Information Security with HelmetJS Challenges":"介绍信息安全必备工具——Helmet","Install and Require Helmet":"安装和引入 Helmet","Hide Potentially Dangerous Information Using helmet.hidePoweredBy()":"使用 helmet.hidePoweredBy() 隐藏潜在的危险信息","Mitigate the Risk of Clickjacking with helmet.frameguard()":"使用 helmet.frameguard() 降低点击劫持的风险","Mitigate the Risk of Cross Site Scripting (XSS) Attacks with helmet.xssFilter()":"使用 helmet.xssFilter() 降低跨站点脚本（XSS）攻击的风险","Avoid Inferring the Response MIME Type with helmet.noSniff()":"使用 helment.noSniff() 避免推断响应的 MIME 类型","Prevent IE from Opening Untrusted HTML with helmet.ieNoOpen()":"使用 helment.ieNoOpen() 防止 IE 打开不受信任的 HTML","Ask Browsers to Access Your Site via HTTPS Only with helmet.hsts()":"使用 helmet.hsts() 要求浏览器只通过HTTPS访问你的网站","Disable DNS Prefetching with helmet.dnsPrefetchControl()":"使用 helmet.dnsPrefetchControl() 禁用 DNS 预取","Disable Client-Side Caching with helmet.noCache()":"使用 helment.noCache() 禁用客户端缓存","Set a Content Security Policy with helmet.contentSecurityPolicy()":"使用 helment.contentSecurityPolicy() 设置内容安全策略","Configure Helmet Using the ‘parent’ helmet() Middleware":"使用 helmet() 中间件来配置 Helmet","Understand BCrypt Hashes":"了解加密哈希","Hash and Compare Passwords Asynchronously":"异步哈希和比较密码","Hash and Compare Passwords Synchronously":"同步哈希和比较密码 ","Introduction to the Quality Assurance with Chai Challenges":"介绍质量保证必备工具——Chai","Learn How JavaScript Assertions Work":"了解 JavaScript 断言是如何工作的","Test if a Variable or Function is Defined":"测试变量或函数是否已定义","Use Assert.isOK and Assert.isNotOK":"使用 Assert.isok() 和 Assert.isNotOK()","Test for Truthiness":"真假测试","Use the Double Equals to Assert Equality":"用两个等号断言相等","Use the Triple Equals to Assert Strict Equality":"用三个等号断言严格相等","Assert Deep Equality with .deepEqual and .notDeepEqual":"用 Assert.deepEqual() 和 Assert.notDeepEqual() 断言深度相等","Compare the Properties of Two Elements":"比较两个元素的属性","Test if One Value is Below or At Least as Large as Another":"测试一个值是否小于或等于另一个值","Test if a Value Falls within a Specific Range":"测试某个值是否在特定范围内","Test if a Value is an Array":"测试某个值是否为数组","Test if an Array Contains an Item":"测试数组是否包含某个项目","Test if a Value is a String":"测试某个值是否为字符串","Test if a String Contains a Substring":"测试字符串是否包含子字符串","Use Regular Expressions to Test a String":"使用正则表达式测试字符串","Test if an Object has a Property":"测试对象是否具有某个属性","Test if a Value is of a Specific Data Structure Type":"测试某个值是否是特定的数据类型","Test if an Object is an Instance of a Constructor":"测试对象是否是构造函数的实例","Run Functional Tests on API Endpoints using Chai-HTTP":"使用 Chai-HTTP 在 API 端上运行功能测试","Run Functional Tests on API Endpoints using Chai-HTTP II":"使用 Chai-HTTP II 在 API 端上运行功能测试","Run Functional Tests on an API Response using Chai-HTTP III - PUT method":"使用 Chai-HTTP III 的 PUT 方法运行功能测试","Run Functional Tests on an API Response using Chai-HTTP IV - PUT method":"使用 Chai-HTTP IV 的 PUT 方法运行功能测试","Run Functional Tests using a Headless Browser":"使用 无头浏览器 运行功能测试","Run Functional Tests using a Headless Browser II":"使用 无头浏览器 II 运行功能测试","Introduction to the Advances Node and Express Challenges":"介绍 Node 和 Express 高级","Set up a Template Engine":"设置模板引擎","Use a Template Engine's Powers":"使用模板引擎","Set up Passport":"设置 Passport","Serialization of a User Object":"用户对象的序列化","Implement the Serialization of a Passport User":"实现 Passport 用户的序列化","Authentication Strategies":"身份验证策略","How to Use Passport Strategies":"如何使用 Passport 策略","Create New Middleware":"创建新的中间件","How to Put a Profile Together":"如何将 Profile 放在一起","Logging a User Out":"用户退出","Registration of New Users":"注册新用户","Hashing Your Passwords":"哈希密码","Clean Up Your Project with Modules":"使用模块清理项目","Implementation of Social Authentication":"实现第一种社交登录","Implementation of Social Authentication II":"实现第二种社交登录","Implementation of Social Authentication III":"实现第三种社交登录","Set up the Environment":"设置环境","Communicate by Emitting":"通过 Emitting 通信","Handle a Disconnect":"处理连接断开","Authentication with Socket.IO":"用 Socket.IO 进行身份验证","Announce New Users":"用户公告","Send and Display Chat Messages":"发送和显示聊天消息","Introduction to the Information Security and Quality Assurance Projects":"项目实战","Metric-Imperial Converter":"公制英制转换器","Issue Tracker":"问题跟踪器","Personal Library":"个人图书馆","Stock Price Checker":"股票价格检查器","Anonymous Message Board":"匿名留言板","Introduction to the Coding Interview Algorithms":"算法面试介绍","Find the Symmetric Difference":"找到对等分差","Inventory Update":"更新库存","No Repeats Please":"请不要重复","Pairwise":"结对","Implement Bubble Sort":"冒泡排序","Implement Selection Sort":"选择排序","Implement Insertion Sort":"插入排序","Implement Quick Sort":"快速排序","Implement Merge Sort":"合并排序","Introduction to the Coding Interview Data Structure Questions":"数据结构面试介绍","Typed Arrays":"类型数组","Learn how a Stack Works":"了解栈如何工作","Create a Stack Class":"创建一个栈","Create a Queue Class":"创建一个队列","Create a Priority Queue Class":"创建一个优先队列","Create a Circular Queue":"创建一个循环队列","Create a Set Class":"介绍一种新的数据结构：集合（Set）","Remove from a Set":"从集合中移除","Size of the Set":"集合的大小","Perform a Union on Two Sets":"求两个集合的并集","Perform an Intersection on Two Sets of Data":"求两个集合的交集","Perform a Difference on Two Sets of Data":"求两个集合的差异","Perform a Subset Check on Two Sets of Data":"求某个集合是否为另一个集合的子集","Create and Add to Sets in ES6":"创建集合并添加项目","Remove items from a set in ES6":"移除集合中的项目","Use .has and .size on an ES6 Set":"使用集合的 has 和 size 方法","Use Spread and Notes for ES5 Set() Integration":"扩展运算符既可以用于数组，也可以用于集合。","Create a Map Data Structure":"介绍一种新的数据结构：映射（Map）","Create an ES6 JavaScript Map":"创建一个 JavaScript 映射","Create a Hash Table":"创建一个哈希表","Work with Nodes in a Linked List":"使用链表中的节点","Create a Linked List Class":"引入一种新的数据结构：链表","Remove Elements from a Linked List":"从链表中删除元素","Search within a Linked List":"在链表中搜索","Remove Elements from a Linked List by Index":"在链表中按索引删除元素","Add Elements at a Specific Index in a Linked List":"在链表的指定索引处添加元素","Create a Doubly Linked List":"创建一个双向链表","Reverse a Doubly Linked List":"反转双向链表","Find the Minimum and Maximum Value in a Binary Search Tree":"找到二叉树中的最小值和最大值","Add a New Element to a Binary Search Tree":"将新元素添加到二叉树中","Check if an Element is Present in a Binary Search Tree":"检查二叉树中是否存在某个元素","Find the Minimum and Maximum Height of a Binary Search Tree":"找到二叉树中的最小高度和最大高度","Use Depth First Search in a Binary Search Tree":"在二叉树中使用深度优先搜索","Use Breadth First Search in a Binary Search Tree":"在二叉树中使用广度优先搜索","Delete a Leaf Node in a Binary Search Tree":"删除二叉树中的叶子节点","Delete a Node with One Child in a Binary Search Tree":"删除二叉树中有一个子节点的节点","Delete a Node with Two Children in a Binary Search Tree":"删除二叉树中有两个子节点的节点","Invert a Binary Tree":"反转二叉树","Create a Trie Search Tree":"创建一个字典树","Insert an Element into a Max Heap":"插入一个元素到最大堆中","Remove an Element from a Max Heap":"从最大堆中删除一个元素","Implement Heap Sort with a Min Heap":"在最小堆中实现堆排序","Adjacency List":"邻接表","Adjacency Matrix":"邻接矩阵","Incidence Matrix":"关联矩阵","Breadth-First Search":"广度优先搜索","Depth-First Search":"深度优先搜索","Introduction to the Coding Interview Take Home Projects":"私人项目介绍","Show the Local Weather":"展示当地的天气","Build a Wikipedia Viewer":"维基百科查看器","Use the Twitch JSON API":"使用 Twitch 的 JSON API","Build an Image Search Abstraction Layer":"图像搜索抽象层","Build a Tic Tac Toe Game":"井字游戏","Build a Simon Game":"西蒙游戏","Build a Camper Leaderboard":"学员排行榜","Build a Recipe Box":"食谱盒","Build the Game of Life":"游戏人生","Build a Roguelike Dungeon Crawler Game":"地牢围攻","P2P Video Chat Application":"P2P 视频聊天应用","Show National Contiguity with a Force Directed Graph":"用力有向图显示国家之间的地理联系","Map Data Across the Globe":"全球地图数据","Manage a Book Trading Club":"管理图书交易俱乐部","Build a Pinterest Clone":"克隆 Pinterest","Build a Nightlife Coordination App":"构建一个协调夜生活的应用","Chart the Stock Market":"绘制股票市场图","Build a Voting App":"构建一个投票应用","Build a Pong Game":"构建一个乒乓游戏","Build a Light-Bright App":"构建一个灯光明亮的应用","Introduction to the Rosetta Code Problems":"介绍罗刹塔代码","100 doors":"百扇门","24 game":"24 点游戏","9 billion names of God the integer":"上帝的九十亿个名字","ABC Problem":"ABC 难题","Introduction to the Project Euler Problems":"欧拉计划介绍","Problem 1: Multiples of 3 and 5":"关卡 1：3 和 5 的倍数","Problem 2: Even Fibonacci Numbers":"关卡 2：偶斐波那契数","Problem 3: Largest prime factor":"关卡 3：最大质因数","Problem 4: Largest palindrome product":"关卡 4：最大回文乘积","Problem 5: Smallest multiple":"关卡 5：最小倍数","Problem 6: Sum square difference":"关卡 6：平方的和与和的平方之差","Problem 7: 10001st prime":"关卡 7：第 10001 个素数","Problem 8: Largest product in a series":"关卡 8：连续数字最大乘积","Problem 9: Special Pythagorean triplet":"关卡 9：特殊毕达哥拉斯三元组","Problem 10: Summation of primes":"关卡 10：素数的和","Problem 11: Largest product in a grid":"关卡 11：方阵中的最大乘积","Problem 12: Highly divisible triangular number":"关卡 12：高度可约的三角形数","Problem 13: Large sum":"关卡 13：大和","Problem 14: Longest Collatz sequence":"关卡 14：最长考拉兹序列","Problem 15: Lattice paths":"关卡 15：网格路径","Problem 16: Power digit sum":"关卡 16：幂的数字和","Problem 17: Number letter counts":"关卡 17：表达数字的英文字母计数","Problem 18: Maximum path sum I":"关卡 18：最大路径和 I","Problem 19: Counting Sundays":"关卡 19：数星期日","Problem 20: Factorial digit sum":"关卡 20：阶乘数字和","Problem 21: Amicable numbers":"关卡 21：亲和数","Problem 22: Names scores":"关卡 22：姓名得分","Problem 23: Non-abundant sums":"关卡 23：并非盈数之和","Problem 24: Lexicographic permutations":"关卡 24：字典序排列","Problem 25: 1000-digit Fibonacci number":"关卡 25：一千位斐波那契数","Problem 26: Reciprocal cycles":"关卡 26：倒数的循环节","Problem 27: Quadratic primes":"关卡 27：二次“素数生成”多项式","Problem 28: Number spiral diagonals":"关卡 28：螺旋数阵对角线","Problem 29: Distinct powers":"关卡 29：不同的幂","Problem 30: Digit n powers":"关卡 30：各位数字的五次幂","Problem 31: Coin sums":"关卡 31：硬币求和","Problem 32: Pandigital products":"关卡 32：全数字的乘积","Problem 33: Digit cancelling fractions":"关卡 33：消去数字的分数","Problem 34: Digit factorials":"关卡 34：各位数字的阶乘","Problem 35: Circular primes":"关卡 35：圆周素数","Problem 36: Double-base palindromes":"关卡 36：双进制回文数","Problem 37: Truncatable primes":"关卡 37：可截素数","Problem 38: Pandigital multiples":"关卡 38：全数字的倍数","Problem 39: Integer right triangles":"关卡 39：整数边长直角三角形","Problem 40: Champernowne's constant":"关卡 40：钱珀瑙恩常数","Problem 41: Pandigital prime":"关卡 41：全数字的素数","Problem 42: Coded triangle numbers":"关卡 42：编码三角形数","Problem 43: Sub-string divisibility":"关卡 43：子串的可整除性","Problem 44: Pentagon numbers":"关卡 44：五边形数"}
// 调用文件遍历方法
fileDisplay(filePath);

function ensureDirSync(dirpath) {
  try {
    fs.mkdirSync(dirpath, { recursive: true });
  } catch (err) {
    if (err.code !== 'EEXIST') {
      throw err;
    }
  }
}

function fileDisplay(filePath) {
  // 根据文件路径读取文件，返回文件列表
  fs.readdir(filePath, function(err, files) {
    if (err) {
      console.warn(err);
    } else {
      // 遍历读取到的文件列表
      files.forEach(function(filename) {
        // 获取当前文件的绝对路径
        var filedir = path.join(filePath, filename);
        // 根据文件路径获取文件信息，返回一个fs.Stats对象
        fs.stat(filedir, function(eror, stats) {
          if (eror) {
            console.warn('获取文件stats失败');
          } else {
            var isFile = stats.isFile();
            var isDir = stats.isDirectory();
            if (isFile && filedir.indexOf('.json') !== -1) {
              // fs.rename(filedir, filedir.replace(/\.json/, '\.chinese.json'), (err)=>{
              //     if (err) {
              //         console.log(err);
              //     }
              // });
              // console.log(filedir);
              var contents = fs.readFileSync(filedir);
              // Define to JSON type
              var content = JSON.parse(contents);
              var jsonContent = content.challenges;
              for (var i = 0; i < jsonContent.length; i++) {
                var test = 'tests:';
                for (var j = 0; j < jsonContent[i].tests.length; j++) {
                  if (jsonContent[i].tests[j].text) {
                    var testString;
                    var text;
                    var title;
                    if (jsonContent[i].title.indexOf(':') !== -1) {
                      title =
                        "'" + jsonContent[i].title.replace(/'/g, '"') + "'";
                    } else {
                      title = jsonContent[i].title;
                    }
                    if (
                      jsonContent[i].tests[j].text.indexOf("'") !== -1 ||
                      jsonContent[i].tests[j].text.indexOf(':') !== -1
                    ) {
                      text =
                        "'" +
                        jsonContent[i].tests[j].text.replace(/'/g, '"') +
                        "'";
                    } else if (
                      jsonContent[i].tests[j].text.indexOf('"') !== -1
                    ) {
                      text =
                        '"' +
                        jsonContent[i].tests[j].text.replace(/"/g, "'") +
                        '"';
                    } else {
                      text = jsonContent[i].tests[j].text;
                    }
                    if (
                      jsonContent[i].tests[j].testString.indexOf('/"') !== -1 ||
                      jsonContent[i].tests[j].testString.indexOf("'/") !== -1 ||
                      !jsonContent[i].tests[j].testString ||
                      jsonContent[i].tests[j].testString.indexOf(':') !== -1
                    ) {
                      testString =
                        "'" +
                        jsonContent[i].tests[j].testString.replace(/'/g, '"') +
                        "'";
                    } else {
                      testString = jsonContent[i].tests[j].testString;
                    }
                    test += `
  - text: ${text}
    testString: ${testString}`;
                  }
                }
                var description, instructions;
                for (var j = 0; j < jsonContent[i].description.length; j++) {
                  if (jsonContent[i].description[j] === '<hr>') {
                    description = jsonContent[i].description.slice(0, j);
                    instructions = jsonContent[i].description.slice(j + 1);
                  }
                }
                if (!description) {
                  description = jsonContent[i].description;
                  instructions = [];
                }
                var text = `---
id: ${jsonContent[i].id}
title: ${title}
challengeType: ${jsonContent[i].challengeType}${
                  jsonContent[i].isRequired !== undefined
                    ? `
isRequired: ${jsonContent[i].isRequired}`
                    : ''
                }
videoUrl: ''
localeTitle: ${dict[title] || title}
---

## Description
<section id='description'>
${description.join('\r\n')}
</section>

## Instructions
<section id='instructions'>
${instructions.join('\r\n')}
</section>

## Tests
<section id='tests'>

\`\`\`yml
${test}

\`\`\`

</section>

## Challenge Seed
<section id='challengeSeed'>
${
  jsonContent[i].files && jsonContent[i].files.indexhtml
    ? `
<div id='html-seed'>`
    : ''
}
${jsonContent[i].files && jsonContent[i].files.indexhtml ? `
\`\`\`html` : ''}
${
  jsonContent[i].files && jsonContent[i].files.indexhtml
    ? jsonContent[i].files.indexhtml.contents.join('\r\n')
    : ''
}
${jsonContent[i].files && jsonContent[i].files.indexhtml ? '```' : ''}

${
  jsonContent[i].files && jsonContent[i].files.indexjsx
    ? `
<div id='jsx-seed'>
    `
    : ''
}
${jsonContent[i].files && jsonContent[i].files.indexjsx ? '```jsx' : ''}
${
  jsonContent[i].files && jsonContent[i].files.indexjsx
    ? `${jsonContent[i].files.indexjsx.contents.join('\r\n')}
    `
    : ''
}
${jsonContent[i].files && jsonContent[i].files.indexjsx ? '```' : ''}
${
  jsonContent[i].files &&
  (jsonContent[i].files.indexhtml || jsonContent[i].files.indexjsx)
    ? `</div>`
    : ''
}
${
  jsonContent[i].files &&
  jsonContent[i].files.indexjs &&
  jsonContent[i].files.indexjs.head.length
    ? `
### Before Test
<div id='js-setup'>

\`\`\`js
${jsonContent[i].files.indexjs.head.join('\r\n')}
\`\`\`

</div>`
    : ''
}
${
  jsonContent[i].files &&
  jsonContent[i].files.indexjsx &&
  jsonContent[i].files.indexjsx.tail.length
    ? `
### After Test
<div id='jsx-teardown'>

\`\`\`jsx
${jsonContent[i].files.indexjsx.tail.join('\r\n')}

\`\`\`

</div>`
    : ''
}
${
  jsonContent[i].files &&
  jsonContent[i].files.indexjsx &&
  jsonContent[i].files.indexjsx.head.length
    ? `
### Before Test
<div id='jsx-setup'>

\`\`\`jsx
${jsonContent[i].files.indexjsx.head.join('\r\n')}

\`\`\`

</div>`
    : ''
}
${
  jsonContent[i].files &&
  jsonContent[i].files.indexjs &&
  jsonContent[i].files.indexjs.tail.length
    ? `
### After Test

<div id='js-teardown'>

\`\`\`js
${jsonContent[i].files.indexjs.tail.join('\r\n')}
\`\`\`

</div>`
    : ''
}

</section>
${
  jsonContent[i].solutions && jsonContent[i].solutions.length
    ? `
## Solution
<section id='solution'>

\`\`\`js
${jsonContent[i].solutions.join('\r\n')}
\`\`\`

</section>`
    : ''
}
              `;
                ensureDirSync(
                  filePath.replace('challenges', 'chinese') +
                    '/' +
                    content.name
                      .replace(/ /g, '-')
                      .toLowerCase()
                      .replace(/[^\w-\.]/g, '')
                );

                fs.writeFile(
                  filePath.replace('challenges', 'chinese') +
                    '/' +
                    content.name
                      .replace(/ /g, '-')
                      .toLowerCase()
                      .replace(/[^\w-\.]/g, '') +
                    '/' +
                    jsonContent[i].title
                      .replace(/ /g, '-')
                      .toLowerCase()
                      .replace(/[^\w-\.]/g, '') +
                    '.chinese.md',
                  text,
                  function(err) {
                    if (err) {
                      return console.log(err);
                    }

                    console.log('The file was saved!');
                  }
                );
              }
            }
            if (isDir) {
              ensureDirSync(filedir.replace('challenges', 'chinese'));
              fileDisplay(filedir);
            }
          }
        });
      });
    }
  });
}
